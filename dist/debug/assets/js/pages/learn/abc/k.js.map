{"version":3,"sources":["app/pages/learn/abc/k.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DA;AAAA","file":"public/assets/js/pages/learn/abc/k.js","sourcesContent":["'use strict';\n\nvar _utils = require('./utils.js');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction create() {\n  var sprite1 = void 0,\n      sprite2 = void 0,\n      sprite3 = void 0;\n\n  var game = _utils2.default.init('k', {\n    preload: function preload() {\n      _utils2.default.preload(game);\n    },\n    create: function create() {\n      _utils2.default.create(game);\n\n      sprite1 = game.add.sprite(game.width / 2, game.height / 2, 'greenhouse-square');\n      game.physics.arcade.enable(sprite1);\n      sprite1.anchor.setTo(0.5, 0.5);\n      sprite1.body.velocity.set(game.rnd.integerInRange(-100, 100), game.rnd.integerInRange(-100, 100));\n      sprite1.body.collideWorldBounds = true;\n      sprite1.body.bounce.setTo(1);\n\n      sprite2 = game.add.sprite(game.width / 4, game.height / 2, 'greenhouse-square');\n      sprite2.anchor.setTo(0.5, 0.5);\n      game.physics.arcade.enable(sprite2);\n      sprite2.body.immovable = true;\n      sprite2.body.bounce.set(1);\n\n      sprite3 = game.add.sprite(game.width * 3 / 4, game.height / 2, 'greenhouse-square');\n      sprite3.anchor.setTo(0.5, 0.5);\n      game.physics.arcade.enable(sprite3);\n      sprite3.body.immovable = true;\n      sprite3.body.bounce.set(1);\n    },\n    update: function update() {\n      game.physics.arcade.collide(sprite1, sprite2, reset);\n      game.physics.arcade.collide(sprite1, sprite3, reset);\n    },\n    render: function render() {}\n  });\n  return game;\n\n  function reset() {\n    sprite1.kill();\n    game.time.events.add(Phaser.Timer.SECOND, function () {\n      sprite1.revive();\n      sprite1.position.setTo(game.width / 2, game.height / 2);\n      sprite1.body.velocity.set(game.rnd.integerInRange(-100, 100), game.rnd.integerInRange(-100, 100));\n    });\n  }\n}\n\nmodule.exports = create;\n"]}