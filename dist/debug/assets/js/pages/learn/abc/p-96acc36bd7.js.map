{"version":3,"sources":["app/pages/learn/abc/p.js"],"names":[],"mappingsfile":"public/assets/js/pages/learn/abc/p.js","sourcesContent":["'use strict';\n\nvar _utils = require('./utils.js');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction create() {\n  var sprite1 = void 0,\n      abutton = void 0,\n      obstacles = void 0,\n      nextPosition = void 0,\n      padding = void 0;\n\n  var game = _utils2.default.init({\n    preload: function preload() {\n      _utils2.default.preload(game, ['a', 'b', 'c']);\n      game.load.image('obstacle', '/assets/img/learning/obstacle.png');\n      game.load.image('greenhouse-small', '/assets/img/learning/logo-circle-small.png');\n    },\n    create: function create() {\n      _utils2.default.create(game);\n      game.physics.arcade.gravity.y = 200;\n      game.physics.arcade.checkCollision.up = false;\n      game.physics.arcade.checkCollision.down = false;\n\n      _utils2.default.ifBreakpoint(game, 'small', function () {\n        return padding = 80;\n      });\n      _utils2.default.ifBreakpoint(game, 'medium', function () {\n        return padding = 130;\n      });\n      _utils2.default.ifBreakpoint(game, 'large', function () {\n        return padding = 180;\n      });\n\n      sprite1 = game.add.sprite(game.width / 2, game.height / 2, 'greenhouse-small');\n      game.physics.arcade.enable(sprite1);\n      sprite1.body.collideWorldBounds = true;\n      sprite1.anchor.setTo(0.5, 1);\n      sprite1.body.bounce.x = 1;\n      _utils2.default.ifBreakpoint(game, 'small', function () {\n        return sprite1.body.velocity.x = 50;\n      });\n      _utils2.default.ifBreakpoint(game, 'medium', function () {\n        return sprite1.body.velocity.x = 75;\n      });\n      _utils2.default.ifBreakpoint(game, 'large', function () {\n        return sprite1.body.velocity.x = 100;\n      });\n\n      obstacles = game.add.group();\n      var ob = game.add.tileSprite(game.width / 2, game.height / 2, game.width * 3 / 8, 16, 'obstacle');\n      ob.anchor.setTo(0.5, 0);\n      initPlatform(ob);\n      nextPosition = 1;\n\n      while (addObstacle()) {}\n\n      abutton = game.add.button(0, 0, 'a-button', jump);\n      _utils2.default.alignButtons(game, [abutton]);\n    },\n    update: function update() {\n      game.physics.arcade.collide(sprite1, obstacles);\n\n      if (obstacles.getBottom().y > game.height) {\n        obstacles.remove(obstacles.getBottom(), true);\n      }\n      addObstacle();\n    },\n    render: function render() {}\n  });\n  return game;\n\n  function jump() {\n    _utils2.default.ifBreakpoint(game, 'small', function () {\n      return sprite1.body.velocity.y = -200;\n    });\n    _utils2.default.ifBreakpoint(game, 'medium', function () {\n      return sprite1.body.velocity.y = -250;\n    });\n    _utils2.default.ifBreakpoint(game, 'large', function () {\n      return sprite1.body.velocity.y = -300;\n    });\n  }\n\n  function addObstacle() {\n    var ob1 = void 0,\n        ob2 = void 0;\n\n    if (obstacles.getTop().y - padding > 0) {\n      if (nextPosition == 1) {\n        ob1 = game.add.tileSprite(game.width, obstacles.getTop().y - padding, game.width / 4 - 32, 16, 'obstacle');\n        ob1.anchor.setTo(1, 0);\n\n        ob2 = game.add.tileSprite(0, obstacles.getTop().y - padding, game.width / 4 - 32, 16, 'obstacle');\n        ob2.anchor.setTo(0, 0);\n        nextPosition = 0;\n      } else {\n        ob1 = game.add.tileSprite(game.width / 2, obstacles.getTop().y - padding, game.width * 3 / 8, 16, 'obstacle');\n        ob1.anchor.setTo(0.5, 0);\n        nextPosition = 1;\n      }\n\n      if (ob1) {\n        initPlatform(ob1);\n      }\n\n      if (ob2) {\n        initPlatform(ob2);\n      }\n\n      return true;\n    }\n  }\n\n  function initPlatform(ob) {\n    game.physics.arcade.enable(ob);\n    ob.body.immovable = true;\n    ob.body.allowGravity = false;\n    ob.body.velocity.y = 25;\n    obstacles.add(ob);\n  }\n}\n\nmodule.exports = create;\n"]}