{"version":3,"sources":["app/pages/learn/abc/utils.js"],"names":[],"mappingsfile":"public/assets/js/pages/learn/abc/utils.js","sourcesContent":["'use strict';\n\nfunction resize(game) {\n  var dim = getGameDim(game.containerId);\n  if (game.width != dim.width) {\n    game.scale.setGameSize(dim.width, dim.height);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction preload(game, buttons) {\n  buttons = buttons || [];\n  if (game.width > 1000) {\n    game.load.image('greenhouse', '/assets/img/learning/logo-circle-large.png');\n    game.load.image('greenhouse-square', '/assets/img/learning/logo-square-large.png');\n    buttons.forEach(function (name) {\n      game.load.image(name + '-button', '/assets/img/learning/' + name + '-button-large.png');\n    });\n  } else if (game.width > 600) {\n    game.load.image('greenhouse', '/assets/img/learning/logo-circle-medium.png');\n    game.load.image('greenhouse-square', '/assets/img/learning/logo-square-medium.png');\n    buttons.forEach(function (name) {\n      game.load.image(name + '-button', '/assets/img/learning/' + name + '-button-medium.png');\n    });\n  } else {\n    game.load.image('greenhouse', '/assets/img/learning/logo-circle-small.png');\n    game.load.image('greenhouse-square', '/assets/img/learning/logo-square-small.png');\n    buttons.forEach(function (name) {\n      game.load.image(name + '-button', '/assets/img/learning/' + name + '-button-small.png');\n    });\n  }\n  game.load.image('reload', '/assets/img/learning/restart-game.png');\n}\n\nfunction create(game) {\n  resize(game);\n  game.physics.startSystem(Phaser.Physics.ARCADE);\n  game.stage.backgroundColor = '#000000';\n  game.add.button(game.width - 16 - 8, game.height - 16 - 8, 'reload', function () {\n    return game.state.restart();\n  });\n  game.scale.setResizeCallback(function () {\n    if (resize(game)) {\n      game.state.restart();\n    }\n  });\n}\n\nfunction getIconWidth(game) {\n  if (game.width > 1000) {\n    return 128;\n  } else if (game.width > 600) {\n    return 64;\n  } else {\n    return 32;\n  }\n}\n\nfunction getBreakpoint(game) {\n  if (game.width > 1000) {\n    return 'large';\n  } else if (game.width > 600) {\n    return 'medium';\n  } else {\n    return 'small';\n  }\n}\n\nfunction getGameDim(id) {\n  var width = $('#' + id).width();\n  return {\n    width: width,\n    height: width / (16 / 9)\n  };\n}\n\nfunction init(letter, config) {\n  var containerId = 'learning-game-' + letter + '-container';\n  var game = new Phaser.Game(getGameDim(containerId).width, getGameDim(containerId).height, Phaser.AUTO, 'learning-game-' + letter, config);\n  game.containerId = containerId;\n  return game;\n}\n\nfunction alignButtons(game, buttons) {\n  var padding;\n  switch (getBreakpoint(game)) {\n    case 'small':\n      padding = 8;\n      break;\n    case 'medium':\n      padding = 12;\n      break;\n    case 'large':\n      padding = 16;\n      break;\n  }\n\n  for (var i = 0; i < buttons.length; i++) {\n    buttons[i].anchor.setTo(0, 1);\n    buttons[i].x = padding + (buttons[i].width + padding) * i;\n    buttons[i].y = game.height - padding;\n  }\n}\n\nfunction ifBreakpoint(game, breakpoint, callback) {\n  if (getBreakpoint(game) == breakpoint) {\n    callback();\n  }\n}\n\nmodule.exports = {\n  resize: resize,\n  preload: preload,\n  create: create,\n  getIconWidth: getIconWidth,\n  init: init,\n  getBreakpoint: getBreakpoint,\n  alignButtons: alignButtons,\n  ifBreakpoint: ifBreakpoint\n};\n"]}