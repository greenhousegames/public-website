{"version":3,"sources":["app/app.js","app/config.js","app/firebase-client.js","app/google-analytics.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtGA;AAAA;ACAA;AAAA;AACA;AACA;AAFA;AAAA","file":"public/assets/js/app.js","sourcesContent":["'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _firebaseClient = require('./firebase-client');\n\nvar _firebaseClient2 = _interopRequireDefault(_firebaseClient);\n\nrequire('./google-analytics');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.GreenhouseGames = {\n  client: new _firebaseClient2.default(),\n  authHelpers: {\n    showAuth: function showAuth() {\n      (0, _jquery2.default)('.show-auth').removeClass('hidden');\n      (0, _jquery2.default)('.hide-auth').addClass('hidden');\n    },\n    hideAuth: function hideAuth() {\n      (0, _jquery2.default)('.hide-auth').removeClass('hidden');\n      (0, _jquery2.default)('.show-auth').addClass('hidden');\n    },\n    loginSuccess: function loginSuccess(data) {\n      if (data.user && !data.user.isAnonymous) {\n        (0, _jquery2.default)('a.account-link').html('<div class=\"thumbnail-image user-image\"></div>' + data.user.displayName);\n        (0, _jquery2.default)('div.user-image').html('<img alt=\"User Profile Image\" src=\"' + data.user.photoURL + '\">');\n        (0, _jquery2.default)('.user-name').text(data.user.displayName);\n      } else {\n        (0, _jquery2.default)('a.account-link').html('<i class=\"material-icons\">person</i>Guest');\n        (0, _jquery2.default)('div.user-image').html('<i class=\"material-icons\">person</i>');\n        (0, _jquery2.default)('.user-name').text('Guest');\n      }\n\n      window.GreenhouseGames.authHelpers.showAuth();\n    },\n    loginError: function loginError(err) {\n      console.log(err);\n    }\n  }\n};\n\n(0, _jquery2.default)(document).ready(function () {\n  // AUTH\n  window.GreenhouseGames.client.firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      window.GreenhouseGames.authHelpers.loginSuccess({ user: user });\n    } else {\n      window.GreenhouseGames.authHelpers.hideAuth();\n    }\n  });\n\n  // HEADER\n  (0, _jquery2.default)('#header-logout-button').click(function () {\n    window.GreenhouseGames.client.signOut().then(window.GreenhouseGames.authHelpers.hideAuth).catch(window.GreenhouseGames.authHelpers.hideAuth);\n  });\n\n  // FOUNADTION\n  (0, _jquery2.default)(document).foundation();\n});\n","'use strict';\n\nmodule.exports = {\n  apiKey: 'AIzaSyCqcbh9XmZZBahTDxmj4GXbwQny9H9wHdo',\n  authDomain: 'greenhouse-games-test.firebaseapp.com',\n  databaseURL: 'https://greenhouse-games-test.firebaseio.com',\n  storageBucket: '',\n  messagingSenderId: '756331628096'\n};\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar staticFirebase = null;\n\nvar FirebaseClient = function () {\n  function FirebaseClient() {\n    _classCallCheck(this, FirebaseClient);\n\n    if (!staticFirebase) {\n      staticFirebase = _firebase2.default.initializeApp(_config2.default);\n    }\n    this.firebase = staticFirebase;\n  }\n\n  _createClass(FirebaseClient, [{\n    key: 'currentUID',\n    value: function currentUID() {\n      return this.firebase.auth().currentUser ? this.firebase.auth().currentUser.uid : null;\n    }\n  }, {\n    key: 'signOut',\n    value: function signOut() {\n      return this.firebase.auth().signOut();\n    }\n  }, {\n    key: 'signInAnonymously',\n    value: function signInAnonymously() {\n      return this.firebase.auth().signInAnonymously();\n    }\n  }, {\n    key: 'signInWithPopup',\n    value: function signInWithPopup(name) {\n      var provider = void 0;\n      switch (name) {\n        case 'google':\n          provider = new _firebase2.default.auth.GoogleAuthProvider();\n          break;\n        case 'facebook':\n          provider = new _firebase2.default.auth.FacebookAuthProvider();\n          break;\n        case 'twitter':\n          provider = new _firebase2.default.auth.TwitterAuthProvider();\n          break;\n        case 'github':\n          provider = new _firebase2.default.auth.GithubAuthProvider();\n          break;\n        default:\n          console.log('Provider \"' + name + '\" is not support');\n          return;\n      }\n\n      return this.firebase.auth().signInWithPopup(provider);\n    }\n  }, {\n    key: 'waitForAuth',\n    value: function waitForAuth() {\n      var auth = this.firebase.auth();\n      var promise = new Promise(function (resolve) {\n        var callback = function callback() {\n          off();\n          resolve();\n        };\n        var off = auth.onAuthStateChanged(callback);\n      });\n      return promise;\n    }\n  }, {\n    key: 'requireAuth',\n    value: function requireAuth() {\n      var _this = this;\n\n      var promise = new Promise(function (resolve, reject) {\n        _this.waitForAuth().then(function () {\n          if (!_this.firebase.auth().currentUser) {\n            _this.firebase.auth().signInAnonymously().then(resolve).catch(reject);\n          } else {\n            resolve();\n          }\n        }).catch(reject);\n      });\n      return promise;\n    }\n  }]);\n\n  return FirebaseClient;\n}();\n\nmodule.exports = FirebaseClient;\n","// Google Analytics disabled for debug builds\n\"use strict\";\n"]}