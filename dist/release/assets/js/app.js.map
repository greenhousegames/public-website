{"version":3,"sources":["app/app.js","app/config.js","app/firebase-client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvjGA;AAAA","file":"public/assets/js/app.js","sourcesContent":["'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _firebaseClient = require('./firebase-client');\n\nvar _firebaseClient2 = _interopRequireDefault(_firebaseClient);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _jquery2.default)(document).foundation();\n\nwindow.GreenhouseGames = {\n  client: new _firebaseClient2.default(),\n  authHelpers: {\n    showAuth: function showAuth() {\n      (0, _jquery2.default)('.show-auth').show();\n      (0, _jquery2.default)('.hide-auth').hide();\n    },\n    hideAuth: function hideAuth() {\n      (0, _jquery2.default)('.hide-auth').show();\n      (0, _jquery2.default)('.show-auth').hide();\n      (0, _jquery2.default)('span.user-name').text('Login');\n    },\n    loginSuccess: function loginSuccess(data) {\n      (0, _jquery2.default)('#user_image').attr('src', data.user.photoURL);\n      (0, _jquery2.default)('#user_name').text(data.user.displayName);\n      (0, _jquery2.default)('span.user-name').text(data.user.displayName);\n      window.GreenhouseGames.authHelpers.showAuth();\n    },\n    loginError: function loginError(err) {\n      console.log(err);\n    }\n  }\n};\n\nwindow.GreenhouseGames.client.firebase.auth().onAuthStateChanged(function (user) {\n  if (user && !user.isAnonymous) {\n    window.GreenhouseGames.authHelpers.loginSuccess({ user: user });\n  } else {\n    window.GreenhouseGames.authHelpers.hideAuth();\n  }\n});\n\n// Google Analytics\n(function (i, s, o, g, r, a, m) {\n  i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {\n    (i[r].q = i[r].q || []).push(arguments);\n  }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);\n})(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n\nga('create', 'UA-85526007-1', 'auto');\nga('send', 'pageview');\n","'use strict';\n\nmodule.exports = {\n  apiKey: 'AIzaSyCqcbh9XmZZBahTDxmj4GXbwQny9H9wHdo',\n  authDomain: 'greenhouse-games-test.firebaseapp.com',\n  databaseURL: 'https://greenhouse-games-test.firebaseio.com',\n  storageBucket: '',\n  messagingSenderId: '756331628096'\n};\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar staticFirebase = null;\n\nvar FirebaseClient = function () {\n  function FirebaseClient() {\n    _classCallCheck(this, FirebaseClient);\n\n    if (!staticFirebase) {\n      staticFirebase = _firebase2.default.initializeApp(_config2.default);\n    }\n    this.firebase = staticFirebase;\n  }\n\n  _createClass(FirebaseClient, [{\n    key: 'currentUID',\n    value: function currentUID() {\n      return this.firebase.auth().currentUser ? this.firebase.auth().currentUser.uid : null;\n    }\n  }, {\n    key: 'signOut',\n    value: function signOut() {\n      return this.firebase.auth().signOut();\n    }\n  }, {\n    key: 'signInWithPopup',\n    value: function signInWithPopup(name) {\n      var provider = void 0;\n      switch (name) {\n        case 'google':\n          provider = new _firebase2.default.auth.GoogleAuthProvider();\n          break;\n        case 'facebook':\n          provider = new _firebase2.default.auth.FacebookAuthProvider();\n          break;\n        case 'twitter':\n          provider = new _firebase2.default.auth.TwitterAuthProvider();\n          break;\n        case 'github':\n          provider = new _firebase2.default.auth.GithubAuthProvider();\n          break;\n        default:\n          console.log('Provider \"' + name + '\" is not support');\n          return;\n      }\n\n      return this.firebase.auth().signInWithPopup(provider);\n    }\n  }, {\n    key: 'waitForAuth',\n    value: function waitForAuth() {\n      var auth = this.firebase.auth();\n      var promise = new Promise(function (resolve) {\n        var callback = function callback() {\n          off();\n          resolve();\n        };\n        var off = auth.onAuthStateChanged(callback);\n      });\n      return promise;\n    }\n  }, {\n    key: 'requireAuth',\n    value: function requireAuth() {\n      var _this = this;\n\n      var promise = new Promise(function (resolve, reject) {\n        _this.waitForAuth().then(function () {\n          if (!_this.firebase.auth().currentUser) {\n            _this.firebase.auth().signInAnonymously().then(resolve).catch(reject);\n          } else {\n            resolve();\n          }\n        }).catch(reject);\n      });\n      return promise;\n    }\n  }]);\n\n  return FirebaseClient;\n}();\n\nmodule.exports = FirebaseClient;\n"]}