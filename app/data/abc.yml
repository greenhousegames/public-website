a:
  order: 6
  letter: a
  name: Acceleration
  header: A is for Acceleration
  subheader: Acceleration is the rate of change of velocity over time
  dependencies:
    - s
    - v
  content: Take a look at the two <a href="s.html">sprites</a> in the game.  Both
    sprites start out with the same <a href="v.html">velocity</a>.  The bottom sprite
    has zero acceleration and the top sprite has positive acceleration.
    <br/>
    <br/>
    Due to not having any acceleration, the velocity of the bottom sprite does not change.
    This is similar to cruise control in a car.  When cruise control is activated,
    the speed of the car stays constant.  This results in the car having zero acceleration.
    <br/>
    <br/>
    Due to having positive acceleration, the velocity of the top sprite increases over time.
    This is similar to a gas pedal in a car.  When the gas pedal is pressed, the
    speed of the car increases.  This results in the car having positive acceleration.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "A is for Acceleration"
      "description": "Lesson about Acceleration in games"
      "url": "https://www.greenhousegames.com/learn/abc/a.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
b:
  order: 7
  letter: b
  name: Bounce
  header: B is for Bounce
  subheader: Bounce is the elasticity of an object
  dependencies:
    - s
    - v
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  All
    sprites start out with the same <a href="v.html">velocity</a>.  The bottom sprite
    has zero bounce, the middle sprite has 75% bounce, and the top sprite has 100% bounce.
    <br/>
    <br/>
    Due to having 100% bounce, the top sprite rebounds off the wall at the same speed.
    This causes the velocity of the top sprite to be the same before and after hitting
    the wall.
    <br/>
    <br/>
    Due to having zero bounce, the bottom sprite does not rebound off the wall.  This
    causes the velocity of the bottom sprite to be zero after it hits the wall.
    <br/>
    <br/>
    Due to having between zero and 100% bounce, the middle sprite rebounds off the wall,
    but at a slower speed.  This causes the velocity of the middle sprite to be 75%
    the speed after hitting the wall.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "B is for Bounce"
      "description": "Lesson about Bounce in games"
      "url": "https://www.greenhousegames.com/learn/abc/b.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
c:
  order: 12
  letter: c
  name: Collision
  header: C is for Collision
  subheader: Collision causes objects to hit each other
  dependencies:
    - s
  content: Take a look at the <a href="s.html">sprites</a> in the game.  Collision is enabled
    for the top two sprites and disabled for the bottom two sprites.
    <br/>
    <br/>
    Due to having collision disabled, the bottom two sprites pass through each other when they
    intersect.
    <br/>
    <br/>
    Due to having collision enabled, the top two sprites rebound off each other when they intersect.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "C is for Collision"
      "description": "Lesson about Collision in games"
      "url": "https://www.greenhousegames.com/learn/abc/c.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
d:
  order: 13
  letter: d
  name: Drag
  header: D is for Drag
  subheader: Dragging is a way to interact with an object
  dependencies:
    - s
  content: Take a look at the two <a href="s.html">sprites</a> in the game.  Dragging is disabled
    for the left sprite and enabled for the right sprite.
    <br/>
    <br/>
    Due to having dragging disabled, the left sprite does not move when you touch it.
    <br/>
    <br/>
    Due to having dragging enabled, the right sprite moves when you hold and drag it around the game.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "D is for Drag"
      "description": "Lesson about Drag in games"
      "url": "https://www.greenhousegames.com/learn/abc/d.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
e:
  order: 22
  letter: e
  name: Experience
  header: E is for Experience
  subheader: Experience is a way to track user progress
  dependencies:
    - s
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite
   will grow as it gains more experience.  Tap the A button to gain experience for
   the sprite.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "E is for Experience"
     "description": "Lesson about Experience in games"
     "url": "https://www.greenhousegames.com/learn/abc/e.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
f:
  order: 10
  letter: f
  name: Frames
  header: F is for Frames
  subheader: Frames are used to design animations
  dependencies:
    - s
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite
   will animate for one loop once the A button is pressed.  Pressing the B button will
   run the animation in a loop.  Pressing the C button will stop the animation.
   <br/>
   <br/>
   An animation is created using still images called frames.  Each frame is
   displayed for a split second before showing the next frame.  The animation shown
   above was created using 10 frames.  The frames are ordered in such a way that
   it gives the effect the ninja is running.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "F is for Frames"
     "description": "Lesson about Frames in games"
     "url": "https://www.greenhousegames.com/learn/abc/f.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
g:
  order: 8
  letter: g
  name: Gravity
  header: G is for Gravity
  subheader: Gravity is the acceleration in the world
  dependencies:
    - a
    - b
    - s
    - v
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  The left sprite
    does not have gravity applied to it.  The middle and right sprites have gravity applied to them.
    <br/>
    <br/>
    Due to having no gravity, the left sprite does not move once placed in the game.  This results in the
    object having no <a href="v.html">velocity</a> or <a href="a.html">acceleration</a>.
    <br/>
    <br/>
    Due to having gravity applied to the world, the middle and right sprite increase in acceleration,
    causing them to fall to the ground.  Once the objects hit the ground, the <a href="b.html">bounce</a>
    defines whether or not the object will rebound off the ground.  The middle sprite has no bounce and the
    right sprite has 100% bounce.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "G is for Gravity"
      "description": "Lesson about Gravity in games"
      "url": "https://www.greenhousegames.com/learn/abc/g.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
h:
  order: 17
  letter: h
  name: Health
  header: H is for Health
  subheader: Health is a way to track damage to an object
  dependencies:
    - k
    - s
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite has full health to start the game.
    Each click of the sprite will reduce the health by 10.  Once the sprite reaches 0 health, it will be <a href="k.html">killed</a>.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "H is for Health"
      "description": "Lesson about Health in games"
      "url": "https://www.greenhousegames.com/learn/abc/h.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
i:
  order: 15
  letter: i
  name: Immovable
  header: I is for Immovable
  subheader: Immovable objects create the boundaries of the game
  dependencies:
    - b
    - c
    - s
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The center sprite is set to immovable.  When other sprites
    <a href="c.html">collide</a> with the center sprite, they will <a href="b.html">bounce</a> off.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "I is for Immovable"
      "description": "Lesson about Immovable in games"
      "url": "https://www.greenhousegames.com/learn/abc/i.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
j:
  order: 9
  letter: j
  name: Jump
  header: J is for Jump
  subheader: Jumping is a way to control an object
  dependencies:
    - a
    - g
    - s
    - v
  content: Take a look at the <a href="s.html">sprite</a> in the game.  Notice how
   the sprite falls to the ground due to <a href="g.html">gravity</a>.  Tap the
   A button to have  the sprite jump into the air once it is on the ground.
   <br/>
   <br/>
   To make a sprite jump, the <a href="v.html">velocity</a> of the sprite must be
   set so it moves upward.  As discussed in the velocity lesson, this will cause
   the sprite to move at a constant speed.  The effect of gravity causes the
   sprite to want to <a href="a.html">accelerate</a> downward.  This combination
   of upward velocity and downward acceleration causes the sprite to slow down as
   it reaches the middle of the screen, then speed up as it approaches the ground.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "J is for Jump"
     "description": "Lesson about Jump in games"
     "url": "https://www.greenhousegames.com/learn/abc/j.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
k:
  order: 16
  letter: k
  name: Kill
  header: K is for Kill
  subheader: Kill refers to destroying objects
  dependencies:
    - b
    - c
    - i
    - s
    - t
    - v
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  The
   middle sprite is given a random <a href="v.html">velocity</a> and has
   <a href="b.html">bounce</a> enabled. The left and right sprite are
   <a href="i.html">immovable</a>.  The middle sprite will be killed if it
   <a href="c.html">collides</a> with either the left or right sprite. A
   <a href="t.html">timer</a> will be used to revive the middle sprite one second
   after it is killed.
   <br/>
   <br/>
   Killing a sprite is a way to remove the sprite from the game.  This causes the
   sprite to be hidden and all interactions with the sprite are disabled.  The
   sprite can be revived, in which cause it is made visible and can interact with
   the rest of the world.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "K is for Kill"
     "description": "Lesson about Kill in games"
     "url": "https://www.greenhousegames.com/learn/abc/k.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
l:
  order: 18
  letter: l
  name: Lives
  header: L is for Lives
  subheader: Lives are a way to track how long a game lasts
  dependencies:
    - h
    - k
    - s
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The sprite
   has been given 100 <a href="h.html">health</a> and 3 lives.  Tapping the A button
   will inflict 10 damage on the sprite.  Tapping the B button will give the sprite 1
   additional health.  The sprite will lose 1 life and be <a href="k.html">killed</a>
   when it reaches zero health. The sprite will be revived if it has remaining lives.
   <br/>
   <br/>
   Lives are a way to track how long the user can play the game.  The user can continue
   to play the game so long as they have lives remaining.  Once the user runs out of life
   they must restart the game or level.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "L is for Lives"
     "description": "Lesson about Lives in games"
     "url": "https://www.greenhousegames.com/learn/abc/l.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
m:
  order: 11
  letter: m
  name: Movement
  header: M is for Movement
  subheader: Movement provides a way to control an object
  dependencies:
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "M is for Movement"
      "description": "Lesson about Movement in games"
      "url": "https://www.greenhousegames.com/learn/abc/m.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
n:
  order: 20
  letter: n
  name: Noise
  header: N is for Noise
  subheader: Noise occurs when using sound effects
  dependencies:
    - s
  content: Lesson coming soon!
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "N is for Noise"
      "description": "Lesson about Noise in games"
      "url": "https://www.greenhousegames.com/learn/abc/n.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
o:
  order: 24
  letter: o
  name: Obstacles
  header: O is for Obstacles
  subheader: Obstacles are objects the user must avoid
  dependencies:
    - s
  content: Lesson coming soon!
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "O is for Obstacles"
      "description": "Lesson about Obstacles in games"
      "url": "https://www.greenhousegames.com/learn/abc/o.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
p:
  order: 25
  letter: p
  name: Platformer
  header: P is for Platformer
  subheader: Platformer is a style of game play
  dependencies:
    - s
  content: Lesson coming soon!
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "P is for Platformer"
      "description": "Lesson about Platformer in games"
      "url": "https://www.greenhousegames.com/learn/abc/p.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
q:
  order: 23
  letter: q
  name: Quests
  header: Q is for Quests
  subheader: Quests provide a challenge for users to complete
  dependencies:
    - s
  content: Lesson coming soon!
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "Q is for Quests"
      "description": "Lesson about Quests in games"
      "url": "https://www.greenhousegames.com/learn/abc/q.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
r:
  order: 26
  letter: r
  name: Runner
  header: R is for Runner
  subheader: Runner is a style of game play
  dependencies:
    - s
  content: Lesson coming soon!
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "R is for Runner"
      "description": "Lesson about Runner in games"
      "url": "https://www.greenhousegames.com/learn/abc/r.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
s:
  order: 1
  letter: s
  name: Sprite
  header: S is for Sprite
  subheader: Sprites are the objects in the game
  dependencies:
  content: The Greenhouse Games icon is added as a sprite in the game.  Sprites have
    many features and can interact with other sprites.  Every ABC lesson uses at least
    one sprite in the game.
    <br/>
    <br/>
    <strong>Sprite Features</strong>
    <br/>
    <a href="c.html">collision</a> | <a href="d.html">dragging</a> | <a href="j.html">jump</a> | <a href="m.html">movement</a>
    <br/>
    <br/>
    <strong>Sprite Properties</strong>
    <br/>
    <a href="a.html">acceleration</a> | <a href="b.html">bounce</a> | <a href="h.html">health</a> | <a href="i.html">immovable</a> | <a href="v.html">velocity</a>
    <br/>
    <br/>
    <strong>Sprite Position</strong>
    <br/>
    <a href="x.html">x position</a> | <a href="y.html">y position</a> | <a href="z.html">z position</a>
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "S is for Sprite"
      "description": "Lesson about Sprite in games"
      "url": "https://www.greenhousegames.com/learn/abc/s.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
t:
  order: 14
  letter: t
  name: Timer
  header: T is for Timer
  subheader: Timers help with periodic events in a game
  dependencies:
    - s
  content: A timer has been set up to go off every 3 seconds.  Once the timer
   expires it will move the <a href="s.html">sprite</a> to a random location.
   The time left on the timer is shown in the upper left.  The A button will pause
   the timer and the B button will resume the timer.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "T is for Timer"
     "description": "Lesson about Timer in games"
     "url": "https://www.greenhousegames.com/learn/abc/t.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
u:
  order: 21
  letter: u
  name: Upgrading
  header: U is for Upgrading
  subheader: Upgrading is way to enhance the attributes of an object
  dependencies:
    - s
  content: Lesson coming soon!
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "U is for Upgrading"
      "description": "Lesson about Upgrading in games"
      "url": "https://www.greenhousegames.com/learn/abc/u.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
v:
  order: 5
  letter: v
  name: Velocity
  header: V is for Velocity
  subheader: Velocity is the rate of change of distance over time
  dependencies:
    - s
    - x
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  All
    sprites start out at the same <a href="x.html">x</a> position.  The bottom sprite
    has zero velocity, the top sprite has positive velocity and the middle sprite has
    half the velocity of the top sprite.
    <br/>
    <br/>
    Due to not having any velocity, the x position of the bottom sprite does not change.
    <br/>
    <br/>
    Due to having positive velocity, the x position of the top sprite increases over time
    until it hits the wall.
    <br/>
    <br/>
    Due to having half the velocity of the top sprite, the middle sprite travels half the distance
    of the top sprite in the same amount of time.  This causes the middle sprite to be half
    way across the game once the top sprite reaches the wall.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "V is for Velocity"
      "description": "Lesson about Velocity in games"
      "url": "https://www.greenhousegames.com/learn/abc/v.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
w:
  order: 19
  letter: w
  name: Weapon
  header: W is for Weapon
  subheader: Weapon is an object used to shoot a projectile
  dependencies:
    - k
    - s
    - v
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite
   has use a weapon which can be used to fire bullets.  Tap the A button to fire a
   bullet in a random direction.
   <br/>
   <br/>
   A new sprite is created in the game when the weapon fires a bullet.  The bullet
   is given a <a href="v.html">velocity</a> in the direction where the tap
   occurred.  In this example the bullet just flies off into space, but in a real
   game you might use a weapon to <a href="k.html">kill</a> enemies or obstacles.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "W is for Weapon"
     "description": "Lesson about Weapon in games"
     "url": "https://www.greenhousegames.com/learn/abc/w.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
x:
  order: 2
  letter: x
  name: X-axis
  header: X is for X-axis
  subheader: X-axis is the location of an object side to side
  dependencies:
    - s
  content: Take a look at the two <a href="s.html">sprites</a> in the game.  The left sprite
    has a x position of zero.  The right sprite has has a x position equal to the game width.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "X is for X-axis"
      "description": "Lesson about X-axis in games"
      "url": "https://www.greenhousegames.com/learn/abc/x.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
y:
  order: 3
  letter: y
  name: Y-axis
  header: Y is for Y-axis
  subheader: Y-axis is the location of an object up and down
  dependencies:
    - s
  content: Take a look at the two <a href="s.html">sprites</a> in the game.  The top sprite
    has a y position of zero.  The bottom sprite has has a y position equal to the game height.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "Y is for Y-axis"
      "description": "Lesson about Y-axis in games"
      "url": "https://www.greenhousegames.com/learn/abc/y.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
z:
  order: 4
  letter: z
  name: Z-index
  header: Z is for Z-index
  subheader: Z-index is the layering of objects
  dependencies:
    - s
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  The left-most
    sprite was added to the game first, followed by the middle sprite, followed by the right-most
    sprite.  Each time a sprite is added, it appears on top of all other sprites.
    <br/>
    <br/>
    Due to being added first, the left-most sprite is covered by the other two sprites.
    This causes the left-most sprite to have the lowest z-index.
    <br/>
    <br/>
    Due to being added last, the right-most sprite is on top of the other two sprites.
    This causes the right-most sprite to have the highest z-index.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "Z is for Z-index"
      "description": "Lesson about Z-index in games"
      "url": "https://www.greenhousegames.com/learn/abc/z.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
