a:
  order: 6
  letter: a
  name: Acceleration
  header: A is for Acceleration
  subheader: Acceleration is the rate of change of velocity over time
  dependencies:
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  All sprites start out with the same positive <a href="v.html">velocity</a>.  The bottom sprite has zero acceleration, the middle sprite has negative acceleration, and the top sprite has positive acceleration.
    <br/>
    <br/>
    Due to having zero acceleration, the velocity of the bottom sprite does not change. This is similar to cruise control in a car.  When cruise control is activated, the speed of the car stays constant.  This results in the car having zero acceleration.
    <br/>
    <br/>
    Due to having negative acceleration, the velocity of the middle sprite decreases over time.  Once the sprite reaches zero velocity, it begins to move in the opposite direction.  This is similar to going in reverse in a car while it is already moving forward (don't try this at home).  Switching to reverse will not immediately cause the car to go backwards.  Instead the car will begin to slow down and then move in the opposite direction once the car has reaches zero velocity.
    <br/>
    <br/>
    Due to having positive acceleration, the velocity of the top sprite increases over time. This is similar to a gas pedal in a car.  When the gas pedal is pressed, the speed of the car increases.  This results in the car having positive acceleration.
    <br/>
    <br/>
    To understand the math, say we have a sprite that starts out with a velocity of 20 pixels per second (px/s). If we give the sprite an acceleration of 0 px/s, the velocity of the sprite will stay constant at 20 px/s. If we give the object an acceleration of 1 px/s, the object will increases its velocity by 1 every second.  After 5 seconds the velocity will be 25 px/s, after 10 seconds the velocity will be 30 px/s, and so on.  If we give the object an acceleration of -1 px/s, the object will decrease its velocity by 1 every second. After 5 seconds the velocity will be 15 px/s, after 10 seconds the velocity will be 10 px/s, and so on.  Once the sprite reaches 0 px/s velocity, the velocity will begin to become negative.  The change from positive velocity to negative velocity means the sprite is moving in the opposite direction.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "A is for Acceleration"
      "description": "Lesson about Acceleration in games"
      "url": "https://www.greenhousegames.com/learn/abc/a.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
b:
  order: 7
  letter: b
  name: Bounce
  header: B is for Bounce
  subheader: Bounce is the elasticity of an object
  dependencies:
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  All sprites start out with the same <a href="v.html">velocity</a>.  The bottom sprite has zero bounce, the middle sprite has 75% bounce, and the top sprite has 100% bounce.
    <br/>
    <br/>
    Due to having 100% bounce, the top sprite rebounds off the wall at the same speed. This causes the velocity of the top sprite to be the same before and after hitting the wall.
    <br/>
    <br/>
    Due to having zero bounce, the bottom sprite does not rebound off the wall.  This causes the velocity of the bottom sprite to be zero after it hits the wall.
    <br/>
    <br/>
    Due to having between zero and 100% bounce, the middle sprite rebounds off the wall, but at a slower speed.  This causes the velocity of the middle sprite to be 75% the speed after hitting the wall.
    <br/>
    <br/>
    To understand the math, say we have a sprite that starts out with a velocity of 20 pixels per second (px/s). If we give the sprite 100% bounce, the velocity before hitting the wall will be 20 px/s and after hitting the wall will be -20 px/s (the change from positive to negative is due to the change in direction).  If we give the sprite zero bounce, the velocity after hitting the wall will be 0 px/s.  If we give the sprite 75% bounce, the velocity will be -15 px/s (20 * 75%) after hitting the first wall, 11.25 px/s (15 * 75%) after hitting the second wall, -8.4375 px/s (11.25 * 75%) after hitting the third wall, and so on.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "B is for Bounce"
      "description": "Lesson about Bounce in games"
      "url": "https://www.greenhousegames.com/learn/abc/b.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
c:
  order: 12
  letter: c
  name: Collision
  header: C is for Collision
  subheader: Collision causes objects to hit each other
  dependencies:
    - b
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  Collision is disabled for the top two sprites and enabled for the middle and bottom sprites.  The top and middle sprites have zero <a href="b.html">bounce</a> and the bottom sprites have 100% bounce.
    <br/>
    <br/>
    Due to having collision disabled, the top two sprites pass through each other when they intersect.  Not having any bounce causes the sprites to stop once they reach the other side.
    <br/>
    <br/>
    Due to having collision enabled, the middle and bottom sprites hit each other when they intersect.  Not having any bounce causes the middle sprites to stop once they hit each other.  Having 100% bounce causes the bottom sprites to rebound off themselves and the walls.
    <br/>
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "C is for Collision"
      "description": "Lesson about Collision in games"
      "url": "https://www.greenhousegames.com/learn/abc/c.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
d:
  order: 13
  letter: d
  name: Drag
  header: D is for Drag
  subheader: Dragging is a way to interact with an object
  dependencies:
    - s
  content: Take a look at the <a href="s.html">sprites</a> in the game.  Dragging is disabled for the left sprite and enabled for the right sprite.
    <br/>
    <br/>
    Due to having dragging disabled, the left sprite does not move when you touch it.
    <br/>
    <br/>
    Due to having dragging enabled, the right sprite moves when you hold and drag it around the game.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "D is for Drag"
      "description": "Lesson about Drag in games"
      "url": "https://www.greenhousegames.com/learn/abc/d.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
e:
  order: 23
  letter: e
  name: Experience
  header: E is for Experience
  subheader: Experience is a way to track user progress
  controls:
    - Gain 1 experience point
    - Fire the weapon
  dependencies:
    - k
    - q
    - s
    - w
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite starts out small and grows as it gains experience.  The sprite is given a <a href="w.html">weapon</a> once it reaches 10 experience. See the <a href="#controls">controls</a> below.
   <br/>
   <br/>
   Experience is used in games to track the user's level.  The user starts the game with zero experience and gains experience over time.  Completing <a href="q.html">quests</a> or <a href="k.html">killing</a> enemies are common ways for users to gain experience.  Once the user reaches a specific amount of experience, they level up.  Games often encourage users to level up by requiring the user to reach a specific level before they can complete a quest or use a weapon.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "E is for Experience"
     "description": "Lesson about Experience in games"
     "url": "https://www.greenhousegames.com/learn/abc/e.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
f:
  order: 10
  letter: f
  name: Frames
  header: F is for Frames
  subheader: Frames are used to design animations
  controls:
    - Animate the sprite for one loop in slow motion
    - Animate the sprite indefinitely
    - Stop the sprite animation
  dependencies:
    - s
  content: Use the <a href="#controls">controls</a> to animate the <a href="s.html">sprite</a>.
    <br/>
    <br/>
    An animation is created using still images called frames.  Each frame is displayed for a split second before showing the next frame.  The animation shown in this lesson was created using 10 frames.  The frames are ordered in such a way that it gives the effect the sprite is running.
    <br/>
    <br/>
    Press the A button to see a slow motion animation showing 1 frame per second.  Press the B button to loop the animation at a faster rate and make the sprite run.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "F is for Frames"
     "description": "Lesson about Frames in games"
     "url": "https://www.greenhousegames.com/learn/abc/f.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
g:
  order: 8
  letter: g
  name: Gravity
  header: G is for Gravity
  subheader: Gravity is the acceleration in the world
  dependencies:
    - a
    - b
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  All sprites start with zero <a href="v.html">velocity</a> and zero <a href="a.html">acceleration</a>.  The left sprite does not have gravity applied to it.  The middle and right sprites have gravity applied to them.  The middle sprite has zero <a href="b.html">bounce</a> and the right sprite has 100% bounce.
    <br/>
    <br/>
    Due to having no gravity, the left sprite does not move once placed in the game.  This results in the sprite still having no velocity or acceleration.
    <br/>
    <br/>
    Due to having gravity applied to the world, the middle and right sprite increase in acceleration, causing them to fall to the ground.  Having no bounce causes the middle sprite to stop once it hits the ground.  Having 100% bounce causes the right sprite to rebound to the same position where it started.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "G is for Gravity"
      "description": "Lesson about Gravity in games"
      "url": "https://www.greenhousegames.com/learn/abc/g.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
h:
  order: 17
  letter: h
  name: Health
  header: H is for Health
  subheader: Health is a way to track damage to an object
  controls:
    - Inflict 10 damage on the sprite
  dependencies:
    - k
    - s
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite has full health to start the game.  Once the sprite reaches zero health, it will be <a href="k.html">killed</a>. See the <a href="#controls">controls</a> below.
   <br/>
   <br/>
   Health is a way to tell how long a sprite lasts in a game.  Sprites with more health can withstand more damage. Bosses often have much more health than normal enemies to make them harder to kill.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "H is for Health"
      "description": "Lesson about Health in games"
      "url": "https://www.greenhousegames.com/learn/abc/h.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
i:
  order: 15
  letter: i
  name: Immovable
  header: I is for Immovable
  subheader: Immovable objects create the boundaries of the game
  dependencies:
    - b
    - c
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  All sprites have <a href="c.html">collision</a> enabled.  The left sprites have been given <a href="v.html">velocity</a> and the right sprites have been set to immovable.  The top left sprite has zero <a href="b.html">bounce</a> and the bottom left sprite has 100% bounce.
   <br/>
   <br/>
   Due to the top left sprite having zero bounce, the sprite has zero velocity after colliding with the immovable sprite. Due to the bottom left sprite having 100% bounce, the sprite maintains its speed after colliding with the immovable sprite.  In both cases the immovable sprite is left with zero velocity after the collision.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "I is for Immovable"
      "description": "Lesson about Immovable in games"
      "url": "https://www.greenhousegames.com/learn/abc/i.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
j:
  order: 9
  letter: j
  name: Jump
  header: J is for Jump
  subheader: Jumping is a way to control an object
  controls:
    - Make the sprite jump
  dependencies:
    - a
    - g
    - s
    - v
  content: Take a look at the <a href="s.html">sprite</a> in the game.  Notice how the sprite falls to the ground due to <a href="g.html">gravity</a>.  Use the <a href="#controls">controls</a> to make the sprite jump.
   <br/>
   <br/>
   The jumping effect is simply caused by <a href="v.html">velocity</a> and <a href="v.html">acceleration</a>.  The jump is started by giving the sprite upward velocity.  The effect of gravity causes the sprite to want to accelerate downward.  This combination of upward velocity and downward acceleration causes the sprite to eventually slow down to zero velocity.  This is the highest point the sprite will jump, also known as the apex of the jump.  Once the sprite reaches the apex, it will begin to accelerate back to the ground.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "J is for Jump"
     "description": "Lesson about Jump in games"
     "url": "https://www.greenhousegames.com/learn/abc/j.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
k:
  order: 16
  letter: k
  name: Kill
  header: K is for Kill
  subheader: Kill refers to destroying objects
  dependencies:
    - b
    - c
    - i
    - s
    - t
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The middle sprite has been given a random <a href="v.html">velocity</a> and has 100% <a href="b.html">bounce</a>. The left and right sprite are <a href="i.html">immovable</a>.  The middle sprite will be killed if it <a href="c.html">collides</a> with either the left or right sprite. A <a href="t.html">timer</a> will be used to revive the middle sprite one second after it is killed.
   <br/>
   <br/>
   Killing a sprite is a way to remove the sprite from the game.  This causes the sprite to be hidden and all interactions with the sprite are disabled.  The sprite can be revived, in which cause it is made visible and can interact with the rest of the world.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "K is for Kill"
     "description": "Lesson about Kill in games"
     "url": "https://www.greenhousegames.com/learn/abc/k.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
l:
  order: 18
  letter: l
  name: Lives
  header: L is for Lives
  subheader: Lives are a way to track how long a game lasts
  controls:
    - Inflict 10 damage on the sprite
    - Give the sprite 1 additional health
  dependencies:
    - h
    - k
    - s
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite has been given 100 <a href="h.html">health</a> and 3 lives.  The sprite will lose 1 life and be <a href="k.html">killed</a> when it reaches zero health. The sprite will be revived if it has remaining lives. See the <a href="#controls">controls</a> below.
   <br/>
   <br/>
   Lives are a way to track how long the user can play the game.  The user can continue to play the game so long as they have lives remaining.  Once the user runs out of life they must restart the game or level.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "L is for Lives"
     "description": "Lesson about Lives in games"
     "url": "https://www.greenhousegames.com/learn/abc/l.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
m:
  order: 11
  letter: m
  name: Movement
  header: M is for Movement
  subheader: Movement provides a way to control an object
  controls:
    - Move the sprite right
    - Move the sprite left
    - Move the sprite up
    - Move the sprite down
  dependencies:
    - a
    - s
    - v
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite starts out with zero <a href="v.html">velocity</a> and can be moved using the <a href="#controls">controls</a>.
   <br/>
   <br/>
   Movement is accomplished by giving the sprite some <a href="a.html">acceleration</a>.  The sprite stops accelerating once it reaches its max velocity.  The moment the user stops moving the sprite, the sprite is given negative acceleration until the sprite reaches zero velocity.
   <br/>
   <br/>
   Movement is a way for a user to get around in the world.  In console gaming, a joystick or directional pad (d-pad) is used to move the player.  In browser or PC gaming, the arrow keys or w-a-s-d keys are used.  In mobile gaming, a virtual joystick or d-pad is used.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "M is for Movement"
      "description": "Lesson about Movement in games"
      "url": "https://www.greenhousegames.com/learn/abc/m.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
n:
  order: 20
  letter: n
  name: Noise
  header: N is for Noise
  subheader: Noise occurs when using sound effects
  controls:
    - Fire the weapon
  dependencies:
    - s
    - w
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite has been equipped with a <a href="w.html">weapon</a> that has sound effects.  See how to <a href="#controls">control</a> the weapon below.
   <br/>
   <br/>
   Sound effects are a great way to engage users in a game.  The noise provides an audible indication of what is happening.  In this lesson, sound effects are used to indicate when the weapon is fired and when the bullet its the edge of world.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "N is for Noise"
      "description": "Lesson about Noise in games"
      "url": "https://www.greenhousegames.com/learn/abc/n.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
o:
  order: 24
  letter: o
  name: Obstacles
  header: O is for Obstacles
  subheader: Obstacles are objects the user must avoid
  controls:
    - Make the sprite jump
  dependencies:
    - h
    - i
    - j
    - k
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The left sprite has been given <a href="v.html">velocity</a> and the middle sprite has been set to <a href="i.html">immovable</a>.  The controls can be used to make the left sprite <a href="j.html">jump</a> over the middle sprite.
   <br/>
   <br/>
   In this lesson, the middle sprite is considered an obstacle.  Obstacles force the user to make some type of <a href="m.html">movement</a> to avoid them.  A penalty is usually given if an obstacle is hit.  For example the sprite may lose <a href="h.html">health</a> or be <a href="k.html">killed</a>.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "O is for Obstacles"
      "description": "Lesson about Obstacles in games"
      "url": "https://www.greenhousegames.com/learn/abc/o.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
p:
  order: 25
  letter: p
  name: Platformer
  header: P is for Platformer
  subheader: Platformer is a style of game play
  controls:
    - Make the sprite jump
  dependencies:
    - b
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The icon sprite has been given side-to-side <a href="v.html">velocity</a> and 100% <a href="b.html">bounce</a>.  The rectangular sprites have been given downward velocity.  Use the <a href="#controls">controls</a> to keep the sprite alive.
    <br/>
    <br/>
    Each rectangular sprite in the game is called a platform.  A platformer style game is one in which the user moves through the world vertically by jumping from platform to platform.  The goal is to keep the sprite on the platforms and not fall off the bottom of the world.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "P is for Platformer"
      "description": "Lesson about Platformer in games"
      "url": "https://www.greenhousegames.com/learn/abc/p.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
q:
  order: 22
  letter: q
  name: Quests
  header: Q is for Quests
  subheader: Quests provide a challenge for users to complete
  controls:
    - Make the sprite jump
    - Start the quest
  dependencies:
    - e
    - g
    - s
    - t
    - w
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite has <a href="g.html">gravity</a> applied to it and can jump using the <a href="#controls">controls</a>.
   <br/>
   <br/>
   A quest has been added to the game and will reward 10 points if completed.  This quest requires the sprite to jump 3 times in 10 seconds.  The time remaining in the quest will be tracked using a <a href="t.html">timer</a>.
   <br/>
   <br/>
   Quests are a good way to engage players.  By rewarding points, <a href="e.html">experience</a>, or <a href="w.html">weapons</a>, it gives the user incentive to complete the quest.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "Q is for Quests"
      "description": "Lesson about Quests in games"
      "url": "https://www.greenhousegames.com/learn/abc/q.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
r:
  order: 26
  letter: r
  name: Runner
  header: R is for Runner
  subheader: Runner is a style of game play
  controls:
    - Make the sprite jump
  dependencies:
    - j
    - o
    - s
    - v
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The icon sprite has been given zero <a href="v.html">velocity</a> and can <a href="j.html">jump</a> using the <a href="#controls">controls</a>.  <a href="o.html">Obstacles</a> will approach from the right and the sprite must avoid them.
    <br/>
    <br/>
    A runner style game is one in which the player travels side-to-side in the world.  The player must avoid obstacles and/or collect rewards along the way.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "R is for Runner"
      "description": "Lesson about Runner in games"
      "url": "https://www.greenhousegames.com/learn/abc/r.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
s:
  order: 1
  letter: s
  name: Sprite
  header: S is for Sprite
  subheader: Sprites are the objects in the game
  dependencies:
  content: The Greenhouse Games icon is added as a sprite in the game.  Sprites have many features and can interact with other sprites.  Every ABC lesson uses at least one sprite in the game.
    <br/>
    <br/>
    <strong>Sprite Features</strong>
    <br/>
    <a href="c.html">collision</a> | <a href="d.html">dragging</a> | <a href="j.html">jump</a> | <a href="m.html">movement</a>
    <br/>
    <br/>
    <strong>Sprite Properties</strong>
    <br/>
    <a href="a.html">acceleration</a> | <a href="b.html">bounce</a> | <a href="h.html">health</a> | <a href="i.html">immovable</a> | <a href="v.html">velocity</a>
    <br/>
    <br/>
    <strong>Sprite Position</strong>
    <br/>
    <a href="x.html">x position</a> | <a href="y.html">y position</a> | <a href="z.html">z position</a>
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "S is for Sprite"
      "description": "Lesson about Sprite in games"
      "url": "https://www.greenhousegames.com/learn/abc/s.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
t:
  order: 14
  letter: t
  name: Timer
  header: T is for Timer
  subheader: Timers help with periodic events in a game
  controls:
    - Pause the timer
    - Resume the timer
  dependencies:
    - s
  content: A timer has been set up to go off every 3 seconds.  Once the timer expires it will move the <a href="s.html">sprite</a> to a random location. The time left on the timer is shown in the upper left.  The A button will pause the timer and the B button will resume the timer. See the <a href="#controls">controls</a> below.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "T is for Timer"
     "description": "Lesson about Timer in games"
     "url": "https://www.greenhousegames.com/learn/abc/t.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
u:
  order: 21
  letter: u
  name: Upgrading
  header: U is for Upgrading
  subheader: Upgrading is way to enhance the attributes of an object
  controls:
    - Fire the weapon for left sprite
    - Upgrade the weapon for left sprite
    - Upgrade the shield for right sprite
  dependencies:
    - s
    - w
  content: Take a look at the <a href="s.html">sprites</a> in the game.  The left sprite has been equipped with a <a href="w.html">weapon</a> and the right sprite has been equipped with a shield. Use the <a href="#controls">controls</a> to play the game.
    <br/>
    <br/>
    To start the game, the weapon will inflict 10 damage and the shield will absorb 0 damage.  The weapon can inflict 10 additional damage each time it is upgraded.  The shield can absorb 10 additional damage each time it is upgraded.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "U is for Upgrading"
      "description": "Lesson about Upgrading in games"
      "url": "https://www.greenhousegames.com/learn/abc/u.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
v:
  order: 5
  letter: v
  name: Velocity
  header: V is for Velocity
  subheader: Velocity is the rate of change of distance over time
  dependencies:
    - s
    - x
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  All sprites start out at the same <a href="x.html">x</a> position.  The bottom sprite has zero velocity, the top sprite has positive velocity and the middle sprite has half the velocity of the top sprite.
    <br/>
    <br/>
    Due to not having any velocity, the x position of the bottom sprite does not change.
    <br/>
    <br/>
    Due to having positive velocity, the x position of the top sprite increases over time until it hits the wall.
    <br/>
    <br/>
    Due to having half the velocity of the top sprite, the middle sprite travels half the distance of the top sprite in the same amount of time.  This causes the middle sprite to be half way across the game once the top sprite reaches the wall.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "V is for Velocity"
      "description": "Lesson about Velocity in games"
      "url": "https://www.greenhousegames.com/learn/abc/v.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
w:
  order: 19
  letter: w
  name: Weapon
  header: W is for Weapon
  subheader: Weapon is an object used to shoot a projectile
  controls:
    - Fire the weapon
  dependencies:
    - k
    - s
    - v
  content: Take a look at the <a href="s.html">sprite</a> in the game.  The sprite has use a weapon which can be used to fire bullets.  Tap the A button to fire a bullet in a random direction. See the <a href="#controls">controls</a> below.
   <br/>
   <br/>
   A new sprite is created in the game when the weapon fires a bullet.  The bullet is given a <a href="v.html">velocity</a> in the direction where the tap occurred.  In this example the bullet just flies off into space, but in a real game you might use a weapon to <a href="k.html">kill</a> enemies or obstacles.
  structured_data:
   0:
     "@context": "http://schema.org"
     "@type": "Course"
     "name": "W is for Weapon"
     "description": "Lesson about Weapon in games"
     "url": "https://www.greenhousegames.com/learn/abc/w.html"
     "provider":
       "@type": "Organization"
       "name": "Greenhouse Games, LLC"
       "sameAs": "https://www.greenhousegames.com"
x:
  order: 2
  letter: x
  name: X-axis
  header: X is for X-axis
  subheader: X-axis is the location of an object side to side
  dependencies:
    - s
  content: Take a look at the two <a href="s.html">sprites</a> in the game.  The left sprite has a x position of zero.  The right sprite has has a x position equal to the game width.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "X is for X-axis"
      "description": "Lesson about X-axis in games"
      "url": "https://www.greenhousegames.com/learn/abc/x.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
y:
  order: 3
  letter: y
  name: Y-axis
  header: Y is for Y-axis
  subheader: Y-axis is the location of an object up and down
  dependencies:
    - s
  content: Take a look at the two <a href="s.html">sprites</a> in the game.  The top sprite has a y position of zero.  The bottom sprite has has a y position equal to the game height.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "Y is for Y-axis"
      "description": "Lesson about Y-axis in games"
      "url": "https://www.greenhousegames.com/learn/abc/y.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
z:
  order: 4
  letter: z
  name: Z-index
  header: Z is for Z-index
  subheader: Z-index is the layering of objects
  dependencies:
    - s
  content: Take a look at the three <a href="s.html">sprites</a> in the game.  The left-most sprite was added to the game first, followed by the middle sprite, followed by the right-most sprite.  Each time a sprite is added, it appears on top of all other sprites.
    <br/>
    <br/>
    Due to being added first, the left-most sprite is covered by the other two sprites. This causes the left-most sprite to have the lowest z-index.
    <br/>
    <br/>
    Due to being added last, the right-most sprite is on top of the other two sprites. This causes the right-most sprite to have the highest z-index.
  structured_data:
    0:
      "@context": "http://schema.org"
      "@type": "Course"
      "name": "Z is for Z-index"
      "description": "Lesson about Z-index in games"
      "url": "https://www.greenhousegames.com/learn/abc/z.html"
      "provider":
        "@type": "Organization"
        "name": "Greenhouse Games, LLC"
        "sameAs": "https://www.greenhousegames.com"
